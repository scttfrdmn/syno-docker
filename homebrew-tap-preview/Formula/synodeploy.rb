# This file was generated by GoReleaser. DO NOT EDIT.
class Synodeploy < Formula
  desc "Deploy containers to Synology DSM 7.2+ with ease"
  homepage "https://github.com/scttfrdmn/synodeploy"
  version "0.1.1"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/scttfrdmn/synodeploy/releases/download/v0.1.1/synodeploy-Darwin-x86_64.tar.gz"
      sha256 "PLACEHOLDER_INTEL_MAC_SHA256"

      def install
        bin.install "synodeploy"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/scttfrdmn/synodeploy/releases/download/v0.1.1/synodeploy-Darwin-arm64.tar.gz"
      sha256 "PLACEHOLDER_ARM_MAC_SHA256"

      def install
        bin.install "synodeploy"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/scttfrdmn/synodeploy/releases/download/v0.1.1/synodeploy-Linux-x86_64.tar.gz"
      sha256 "PLACEHOLDER_LINUX_INTEL_SHA256"

      def install
        bin.install "synodeploy"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/scttfrdmn/synodeploy/releases/download/v0.1.1/synodeploy-Linux-arm64.tar.gz"
      sha256 "PLACEHOLDER_LINUX_ARM_SHA256"

      def install
        bin.install "synodeploy"
      end
    end
  end

  def install
    bin.install "synodeploy"

    # Generate shell completions
    output = Utils.safe_popen_read("#{bin}/synodeploy", "completion", "bash")
    (bash_completion/"synodeploy").write output
    output = Utils.safe_popen_read("#{bin}/synodeploy", "completion", "zsh")
    (zsh_completion/"_synodeploy").write output
    output = Utils.safe_popen_read("#{bin}/synodeploy", "completion", "fish")
    (fish_completion/"synodeploy.fish").write output
  end

  test do
    system "#{bin}/synodeploy", "--version"
    system "#{bin}/synodeploy", "--help"
    # Test init command without actually connecting
    output = shell_output("#{bin}/synodeploy init --help")
    assert_match "Setup connection to Synology NAS", output
  end
end